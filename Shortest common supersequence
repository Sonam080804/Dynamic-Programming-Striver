Problem Link ->  https://leetcode.com/problems/shortest-common-supersequence/


class Solution {
public:
    string shortestCommonSupersequence(string t1, string t2) {
        int n = t1.size() , m = t2.size() ;

        // finding LCS Table . caz element in LCS will be same for both string and 
        // no need to take them twice for shorter supersequence .
        vector<vector<int>>dp(n + 1 , vector<int>(m + 1 , 0)) ;
        
        for(int i = 1 ; i <= n ; i++){
            for(int j = 1  ; j <= m ; j++){
                if(t1[i - 1] == t2[j - 1]){
                    dp[i][j] = dp[i - 1][j - 1] + 1 ;
                }
                else
                   dp[i][j] = max(dp[i - 1][j] , dp[i][j - 1]) ;
            }
        }

        string ans ;
        int i = n , j = m ;
        while(i > 0 && j > 0){
            if(t1[i - 1] == t2[j - 1]){
                ans = t1[i - 1] + ans ;
                i-- ;
                j-- ;
            }
            else{
                if(dp[i - 1][j] >= dp[i][j - 1]){
                    ans = t1[i - 1] + ans ;
                    i-- ;
                }
                else{
                   ans = t2[j - 1] + ans ;
                   j-- ;
                }
            }
        }

        while(i > 0){
            ans = t1[i - 1] + ans ;
            i-- ;
        }

        while(j > 0){
            ans = t2[j - 1] + ans ;
            j-- ;
        }

        return ans ;
    }
};
